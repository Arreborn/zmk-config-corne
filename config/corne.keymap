#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <150>;
            global-quick-tap;
            require-prior-idle-ms = <75>;
            hold-trigger-on-release;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        brace: brace {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        bracket: bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        shift_tab: shift_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_TAB";
            bindings = <&kp SPACE>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_del: shift_del {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        adv_lt: adv_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "ADV_LT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <100>;
            require-prior-idle-ms = <75>;
        };

        mod_com: mod_com {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_COM";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mod_per: mod_per {
            compatible = "zmk,behavior-mod-morph";
            label = "MOD_PER";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mod_hold_tap: mod_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;

            quick-tap-ms = <75>;
            require-prior-idle-ms = <60>;
        };

        super_shift: super_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SUPER_SHIFT";
            bindings = <&mod_hold_tap LEFT_SHIFT LEFT_SHIFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Moosewings_L {
            bindings = <&brace>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        Moosewings_R {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 19>;
            timeout-ms = <50>;
        };

        Para_L {
            bindings = <&para>;
            key-positions = <4 5>;
        };

        Para_R {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        Bracket_R {
            bindings = <&bracket>;
            key-positions = <28 29>;
        };

        Bracket_L {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        sym_1 {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 1>;
        };

        sym_2 {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        sym_3 {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        sym_4 {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        sym_5 {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        sym_6 {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        sym_7 {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        sym_8 {
            bindings = <&kp RA(U)>;
            key-positions = <8 20>;
        };

        sym_9 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <9 21>;
        };

        sym_10 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 22>;
        };

        qm {
            bindings = <&kp QUESTION>;
            key-positions = <22 23>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        DEF {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB       &kp V  &kp L  &kp H  &kp G       &kp K               &kp Q            &kp F       &kp O          &kp U     &kp J      &kp RA(A)
&super_shift  &kp S  &kp R  &kp N  &kp T       &kp B               &kp Y            &kp C       &kp A          &kp E     &kp I      &mt RIGHT_SHIFT SLASH
&kp LCTRL     &kp Z  &kp X  &kp M  &kp D       &kp P               &kp SQT          &kp W       &mod_com       &mod_per  &kp MINUS  &kp RIGHT_ALT
                            &mo 3  &shift_del  &adv_lt 1 ESCAPE    &adv_lt 2 ENTER  &shift_tab  &kp RIGHT_GUI
            >;
        };

        NUM {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans            &trans    &kp AMPERSAND    &kp GREATER_THAN  &kp PERCENT   &kp PERIOD    &kp UP_ARROW     &kp N7        &kp N8         &kp N9        &trans        &trans
&mo 3             &kp LEFT  &kp EXCLAMATION  &kp EQUAL         &kp PLUS      &kp MINUS     &kp BACKSPACE    &kp NUMBER_4  &kp NUMBER_5   &kp NUMBER_6  &kp NUMBER_0  &mo 4
&kp LEFT_CONTROL  &trans    &kp PIPE         &kp LESS_THAN     &kp ASTERISK  &kp SLASH     &kp DOWN_ARROW   &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &trans        &kp RIGHT_ALT
                                             &mo 3             &shift_del    &trans        &adv_lt 4 ENTER  &shift_tab    &kp RIGHT_GUI
            >;
        };

        SYM {
            display-name = "Sym";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans            &kp EXCL  &kp AT          &kp HASH        &kp DLLR         &kp PRCNT           &kp CARET  &kp AMPS    &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RPAR  &kp QUESTION
&trans            &trans    &trans          &kp UP_ARROW    &trans           &kp GRAVE           &kp MINUS  &kp EQUAL   &kp LBKT       &kp RBKT              &kp BSLH  &trans
&kp LEFT_CONTROL  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp TILDE           &kp UNDER  &kp PLUS    &kp LBRC       &kp RBRC              &kp PIPE  &kp RIGHT_ALT
                                            &kp LGUI        &shift_del       &adv_lt 4 ESCAPE    &trans     &shift_tab  &kp RIGHT_GUI
            >;
        };

        NAV {
            display-name = "Nav";
            bindings = <
&browsertab       &kp C_BRI_INC  &kp F16           &kp F17            &kp F18            &kp C_VOLUME_UP      &kp C_PREV        &kp HOME  &kp UP_ARROW    &kp END    &kp PG_UP  &kp LS(LG(NUMBER_4))
&super_shift      &kp C_BRI_DEC  &kp LS(LG(LEFT))  &kp LS(LG(SPACE))  &kp LS(LG(RIGHT))  &kp K_MUTE           &kp C_PLAY_PAUSE  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp PG_DN  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LG(Z)      &kp LG(X)         &kp LG(C)          &kp LG(V)          &kp C_VOLUME_DOWN    &kp C_NEXT        &trans    &trans          &trans     &trans     &kp RIGHT_ALT
                                                   &trans             &kp LEFT_SHIFT     &kp LG(SPACE)        &kp LG(SPACE)     &kp TAB   &kp PAGE_UP
            >;
        };

        Conf {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &studio_unlock    &bootloader  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans       &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans            &trans       &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
